"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$$h=i*@5o5gi7vfel64^4w$&(8^q5b38rd%$khy9lrvk%3mj!$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost:8000","127.0.0.1","phoenix-rapid-factually.ngrok-free.app","election-list.uz"]
CSRF_TRUSTED_ORIGINS = [
    'https://phoenix-rapid-factually.ngrok-free.app',
    "http://election-list.uz",
]
UNFOLD = {
    "SITE_TITLE": "Election Admin Panel",
    "SITE_HEADER": "O'zbekiston Saylov Uchastkalari Boshqaruvi",
    "SITE_LOGO": {
        "light": "/static/images/logo-light.png",  # Path to your logo
        "dark": "/static/images/logo-dark.png",
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": ("Saylov Ma'lumotlari"),
                "items": [
                    {
                        "title": ("Saylov Uchastkalari"),
                        "icon": "place",
                        "link": "/admin/your_app_name/electiondistrict/",
                    },
                    {
                        "title": ("USK A'zolari"),
                        "icon": "people",
                        "link": "/admin/your_app_name/commissionmember/",
                    },
                    {
                        "title": ("Vakolatli Vakillar"),
                        "icon": "person",
                        "link": "/admin/your_app_name/representative/",
                    },
                    {
                        "title": ("Kuzatuvchilar"),
                        "icon": "visibility",
                        "link": "/admin/your_app_name/observer/",
                    },
                ],
            },
        ],
    },
    "COLORS": {
        "primary": {
            "50": "#e6f0fa",
            "100": "#b3d1f0",
            "200": "#80b2e6",
            "300": "#4d93dc",
            "400": "#1a74d2",
            "500": "#0057b8",
            "600": "#004999",
            "700": "#003a7a",
            "800": "#002b5c",
            "900": "#001c3d",
        },
    },
    "TABS": [
        {
            "models": [
                "your_app_name.electiondistrict",
                "your_app_name.commissionmember",
                "your_app_name.representative",
                "your_app_name.observer",
            ],
            "items": [
                {
                    "title": ("Saylov Uchastkalari"),
                    "link": "/admin/your_app_name/electiondistrict/",
                },
                {
                    "title": ("USK A'zolari"),
                    "link": "/admin/your_app_name/commissionmember/",
                },
                {
                    "title": ("Vakolatli Vakillar"),
                    "link": "/admin/your_app_name/representative/",
                },
                {
                    "title": ("Kuzatuvchilar"),
                    "link": "/admin/your_app_name/observer/",
                },
            ],
        },
    ],
}
# Application definition

INSTALLED_APPS = [
    'unfold',
    'whitenoise',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',

        # Third party apps
    'crispy_forms',
    'crispy_bootstrap5',
    'django_filters',
    'django_tables2',
    'import_export',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR.joinpath('templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
import os
# Internationalization
LANGUAGE_CODE = 'uz'
TIME_ZONE = 'Asia/Tashkent'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"